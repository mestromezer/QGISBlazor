@page "/fetchdata"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject HttpClient client
@inject ILogger<FetchData> Logger

<PageTitle>Здания</PageTitle>

<h1>Списко зданий</h1>

<p>Данные получены от QGISDataApi</p>

@if (_buildingsData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Адресс</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in _buildingsData)
            {
                <tr>
                    <td>@data.ID</td>
                    <td>@data.Address</td>
                </tr>
            }
        </tbody>
    </table>
}

@code 
{
    IList<Building> _buildingsData = default!;
    public class Building
    {
        public int ID { get; set; }
        public string? Geom { get; set; }
        public string? Address { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://localhost:7066/QGIS"
        );
        request.Headers.Add("accept", "application/json");
        var response = await client.SendAsync(request);

        Logger.LogInformation($"Status code: {response.StatusCode}");

        try
        {
            _buildingsData = await response.Content.ReadFromJsonAsync<List<Building>>();
        }
        catch (Exception ex) {
            Logger.LogError(ex.Message);
        }

        /*if (response.IsSuccessStatusCode)
        {
            var responseStream = await response.Content.ReadFromJsonAsync<Building>();
        }
        else
        {
            throw new Exception(message: "Api response bad status code");
        }*/
    }

}
